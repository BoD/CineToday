// Top-level build file where you can add configuration options common to all sub-projects/modules.
ext.globalProjectName = 'CineToday'

buildscript {
    apply from: 'gradle/versions.gradle'
    apply from: 'gradle/repos.gradle'

    repositories.addRepos()

    dependencies {
        classpath "com.android.tools.build:gradle:$versions.plugins.androidGradle"
        classpath "com.github.ben-manes:gradle-versions-plugin:$versions.plugins.gradleVersions"
        classpath "com.getkeepsafe.dexcount:dexcount-gradle-plugin:$versions.plugins.dexCount"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
        // See https://android-developers.googleblog.com/2018/05/announcing-new-sdk-versioning.html
        classpath "com.google.android.gms:strict-version-matcher-plugin:$versions.plugins.gmsStrictVersionMatcher"

        // XXX Needed temporarily because of https://issuetracker.google.com/issues/119776863
        // XXX REMOVE when fixed
        classpath 'com.android.tools.build.jetifier:jetifier-processor:1.0.0-beta03'
    }
}

allprojects {
    repositories.addRepos()

//  Not needed with AndroidX ?
//    // Force using our version of the support libraries, even for those we don't depend on directly (transitive dependencies)
//    configurations.all {
//        resolutionStrategy {
//            eachDependency { details ->
//                if (details.requested.group == 'com.android.support'
//                        && details.requested.name != 'multidex'
//                        && details.requested.name != 'multidex-instrumentation') {
//                    details.useVersion versions.supportLibrary
//                }
//            }
//        }
//    }

    // Show a report in the log when running tests
    tasks.withType(Test) {
        testLogging {
            events "passed", "skipped", "failed", "standardOut", "standardError"
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

wrapper {
    gradleVersion = versions.build.gradle
    distributionType = Wrapper.DistributionType.ALL
}

apply from: 'gradle/misc.gradle'
